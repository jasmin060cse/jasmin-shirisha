#program 1
class node:
    def __init__(self,data):
        self.data=data
        self.left=None
        self.right=None
    def dfs_inorder(root):
        if root==None:
            return
        dfs_inorder(root.left)
        print(root.data)
        dfs_inorder(root.right)
    

    def dfs_preorder(root):
        if root==None:
            return
        print(root.data)
        dfs_preorder(root.left)
        dfs_preorder(root.right)


    def dfs_postorder(root):
        if root==None:
            return
        dfs_postorder(root.left)
        dfs_postorder(root.right)
        print(root.data)    

root=node(1)
root.left=node(2)
root.right=node(3)
root.left.left=node(4)
root.left.right=node(5)   



# program 2
 vis={source}
        q=[source]
        d={i:[] for i in range(n)}
        for i,j in edges:
            d[i].append(j)
            d[j].append(i)
        while q:
            a=q.pop(0)
            for i in d[a]:
                if i not in vis:
                    q.append(i)
                    vis.add(i)
                if a==destination:
                   return True
        return               

     